cpu명령어는 101010으로 그냥써있는것이다 변수, 포인터 ,flout인지는 cpu설계자에따라 달라진다. 이개념은 중요하다 그냥 어떻게 해석하냐에 따라 달라진다
결국에 메모리에 똑같은 값이 있어도 ? 해석하에 달라진다

포인터란? 메모리값을 담아두는 그릇이다. 

어떤식으로 쓰이냐 int a ㄹ의 값이 10이다. 메모리는 주소번지가 있다 주소가 만약 ox123이다. 

그냥 주소 ox123을저장한다 에 int *pa 이다라고 지정한다.
그렇지만 주소가있다. ox200이라는게 있다.

pa를 호출하면 ox200번지가 호출된다?


(_1) int a = 3 을 넣으면 메모리 랜덤의 주소에 값이 들어간다.

int * pa 을 하면 메모리 방이 할당된다.

(_2) 약속을 하였다 . 포인터안엔 메모리 번지 주소를 넣자. ex) pa = ox01; 을 넣자 
또는 pa = &a; 이다.
(_3)

*pa =4;    *은 멀까?  
pa안에 들어있는 주소번지를 따라가라 그 주소번지에있는 해당하는거에 값을 4이다
(_4) * : pa야 a의 주소인 ox01번지로 가렴 그리고 거기에 4를 넣어라!.

int a = 5;
    int *pa;
    int **ppa;

pa = &a;

 ppa = &pa;

1. pa에 a의 주소를 넣는다 

2. ppa에 pa의 주소를 넣는다

3. *pa 야 pa에 무슨값이 있냐 -> a의 주소가있습니다 -> 그럼 a안에는 무슨값이 있는데 -> 5요
	(*pa = 5)

4. *ppa ppa 안에 무슨값이 있냐 -> pa의 주소가있습니다 -> 그럼 pa 안에는 무슨값이 있는데 -> a의 주소로 
	(*ppa 는 a의 주소)

5. **ppa 야 ppa 안에 무슨값이 있냐 -> pa의 주소 -> 그럼 pa 주소로가 -> 그럼 pa 안에는 무슨값 -> a의 주소요 -> 
			그럼 a의 주소로가 -> 그래서 a의 값은 몇인데  -> 5요
(**ppa = 5)

***ppa 야 ppa 너 머들었어 -> 0136이요 -> 그래 ? 그럼그걸 메모리번지로생각해 -> 그럼 pa (0136)로가서 그값을줘
























